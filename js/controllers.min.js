"use strict";var apControllers=angular.module("apControllers",[]);apControllers.controller("AppCtrl",["$scope","$location",function(t,e){t.navigateMe=function(t,n){switch(t){case"projects":e.url("/projects"+n);break;case"newsletters":e.url("/newsletters"+n);break;case"clients":e.url("/clients"+n);break;case"contacts":e.url("/contacts"+n)}},t.currentProject=""}]),apControllers.controller("HomeCtrl",["$scope",function(t){}]),apControllers.controller("ProjectsCtrl",["$scope","$location","$log","$mdDialog","dbAPI",function(t,e,n,o,c){t.projects={},t.getProjects=function(){c.getRecords("projects,clients",!1).then(function(e){t.projects=c.relations(e.data)},function(t){n.log(t)})},t.openProject=function(n){t.$parent.currentProject=n.name,e.url("/projects/"+n.id)},t.addProject=function(){o.show({controller:"projectDialogCtrl",templateUrl:"/templates/add-new-project.html"}).then(function(e){t.getProjects()},function(t){})},t.editProject=function(e){o.show({controller:"projectDialogCtrl",templateUrl:"/templates/add-new-project.html",locals:{projectObj:e},bindToController:!0}).then(function(){t.getProjects()},function(){})},t.deleteProject=function(e){o.show(o.confirm().title("Biztosan törlöd?").content("A művelet nem visszavonható").ok("Törlés").cancel("Mégse")).then(function(){c.deleteRecord("projects",e).then(function(e){t.getProjects()},function(t){n.log(t)})},function(){n.log("cancel")})},t.getProjects()}]),apControllers.controller("ProjectdetailsCtrl",["$scope","$location","$window","$mdDialog","$routeParams","$log","dbAPI",function(t,e,n,o,c,l,a){t.project={},t.jobs={},t.tasks={},t.clickedJob=-1,t.back=function(){n.history.back()},t.getJobs=function(){a.getRecords("jobs",!0,"parent_id,eq,"+c.id).then(function(e){t.project.name=t.$parent.currentProject,t.jobs=e.data.jobs},function(t){l.log(t)})},t.addJob=function(){o.show({controller:"jobDialogCtrl",templateUrl:"/templates/add-new-job.html",locals:{is_new:!0,parent_id:c.id},bindToController:!0}).then(function(e){t.getJobs()},function(t){})},t.editJob=function(e){o.show({controller:"jobDialogCtrl",templateUrl:"/templates/add-new-job.html",locals:{is_new:!1,jobObj:e},bindToController:!0}).then(function(e){t.getJobs()},function(t){})},t.getTasks=function(e){t.clickedJob=e,a.getRecords("tasks",!0,"parent_id,eq,"+e).then(function(e){t.tasks=e.data.tasks,l.log(t.tasks)},function(t){l.log(t)})},t.addTask=function(){o.show({controller:"taskDialogCtrl",templateUrl:"/templates/add-new-task.html",locals:{is_new:!0,parent_id:t.clickedJob},bindToController:!0}).then(function(e){t.getTasks(t.clickedJob)},function(t){})},t.getJobs()}]),apControllers.controller("NewslettersCtrl",["$scope","$http","$log","dbAPI","NLService",function(t,e,n,o,c){t.templates={},t.newsletters={},t.recipients={},t.newNewsletter={},t.newNewsletter.recipients=[],t.newNewsletter.sent=null,t.getNewsletters=function(){o.getRecords("newsletters",!0).then(function(e){t.newsletters=e.data.newsletters},function(t){n.log(t)})},t.getTemplates=function(){c.getTemplates().then(function(e){t.templates=e.data},function(t){n.log(t)})},t.getRecipients=function(){e.get("newsletter/recipients.json").then(function(e){t.recipients=e.data},function(t){n.log(t)})},t.saveNewsletter=function(){delete t.newNewsletter.recipients,o.addRecord("newsletters",t.newNewsletter).then(function(t){n.log(t)},function(t){n.log(t)})},t.sendNewsletter=function(){angular.forEach(t.recipients,function(e,n){e.selected&&t.newNewsletter.recipients.push({email:e.email,type:"to"})}),c.sendNewsletter(t.newNewsletter).then(function(t){n.log(t)},function(t){n.log(t)})},t.getNewsletters(),t.getTemplates(),t.getRecipients()}]),apControllers.controller("ClientSettingsCtrl",["$scope","$location","$log","$mdDialog","dbAPI",function(t,e,n,o,c){t.clients={},t.contacts={},t.getClients=function(){c.getRecords("clients,contacts",!1).then(function(e){t.clients=c.relations(e.data)},function(t){n.log(t)})},t.addClient=function(){o.show({controller:"clientDialogCtrl",scope:t,preserveScope:!0,templateUrl:"/templates/add-new-client.html"}).then(function(){t.getClients()},function(){})},t.editClient=function(e){o.show({controller:"clientDialogCtrl",templateUrl:"/templates/add-new-client.html",locals:{clientObj:e},bindToController:!0}).then(function(){t.getClients()},function(){})},t.deleteClient=function(e){o.show(o.confirm().title("Biztosan törlöd?").content("A művelet nem visszavonható").ok("Törlés").cancel("Mégse")).then(function(){c.deleteRecord("clients",e).then(function(e){t.getClients()},function(t){n.log(t)})},function(){n.log("cancel")})},t.addContact=function(e){o.show({controller:"contactDialogCtrl",templateUrl:"/templates/add-new-contact.html",locals:{is_new:!0,client_id:e},bindToController:!0}).then(function(){t.getClients()},function(){})},t.openContacts=function(e){t.$parent.navigateMe("contacts","?filter="+e)},t.getClients()}]),apControllers.controller("ContactSettingsCtrl",["$scope","$location","$log","$mdDialog","dbAPI",function(t,e,n,o,c){t.contacts={},t.contactFilter=e.search().filter,t.getContacts=function(){c.getRecords("contacts,clients",!1).then(function(e){t.contacts=c.relations(e.data)},function(t){n.log(t)})},t.addContact=function(){o.show({controller:"contactDialogCtrl",templateUrl:"/templates/add-new-contact.html",locals:{is_new:!0},bindToController:!0}).then(function(){t.getContacts()},function(){})},t.editContact=function(e){o.show({controller:"contactDialogCtrl",templateUrl:"/templates/add-new-contact.html",locals:{is_new:!1,contactObj:e},bindToController:!0}).then(function(){t.getContacts()},function(){})},t.deleteContact=function(e){o.show(o.confirm().title("Biztosan törlöd?").content("A művelet nem visszavonható").ok("Törlés").cancel("Mégse")).then(function(){c.deleteRecord("contacts",e).then(function(e){t.getContacts()},function(t){n.log(t)})},function(){n.log("cancel")})},t.getContacts()}]),apControllers.controller("projectDialogCtrl",["$scope","$mdDialog","$log","dbAPI",function(t,e,n,o){t.projectData={},t.clients={};var c=this.locals;o.getRecords("clients",!0).then(function(e){t.clients=e.data.clients},function(t){n.log(t)}),c&&(angular.forEach(c.projectObj,function(e,n){t.projectData[n]=e}),delete t.projectData.clients,delete t.projectData.created,delete t.projectData.last_modified),t.saveProject=function(){c?o.updateRecord("projects",t.projectData.id,t.projectData).then(function(t){e.hide()},function(t){n.log(t)}):o.addRecord("projects",t.projectData).then(function(t){e.hide()},function(t){n.log(t)})},t.closeDialog=function(){e.cancel()}}]),apControllers.controller("clientDialogCtrl",["$scope","$mdDialog","$log","dbAPI",function(t,e,n,o){t.clientData={};var c=this.locals;c&&angular.forEach(c.clientObj,function(e,n){t.clientData[n]=e}),t.saveClient=function(){c?o.updateRecord("clients",t.clientData.id,t.clientData).then(function(t){e.hide()},function(t){n.log(t)}):o.addRecord("clients",t.clientData).then(function(t){e.hide()},function(t){n.log(t)})},t.closeDialog=function(){e.cancel()}}]),apControllers.controller("contactDialogCtrl",["$scope","$mdDialog","$log","dbAPI",function(t,e,n,o){t.contactData={},t.clients={};var c=this.locals;c.is_new?t.contactData.client_id=c.client_id:angular.forEach(c.contactObj,function(e,n){t.contactData[n]=e}),o.getRecords("clients",!0).then(function(e){t.clients=e.data.clients},function(t){n.log(t)}),t.saveContact=function(){c.is_new?o.addRecord("contacts",t.contactData).then(function(t){e.hide()},function(t){n.log(t)}):(delete t.contactData.clients,o.updateRecord("contacts",t.contactData.id,t.contactData).then(function(t){e.hide()},function(t){n.log(t)}),n.log(t.contactData))},t.closeDialog=function(){e.cancel()}}]),apControllers.controller("jobDialogCtrl",["$scope","$mdDialog","$log","dbAPI",function(t,e,n,o){t.jobData={};var c=this.locals;c.is_new||angular.forEach(c.jobObj,function(e,n){t.jobData[n]=e}),t.saveJob=function(){c.is_new?(t.jobData.parent_id=c.parent_id,o.addRecord("jobs",t.jobData).then(function(t){e.hide()},function(t){n.log(t)})):o.updateRecord("jobs",t.jobData.id,t.jobData).then(function(t){e.hide()},function(t){n.log(t)})},t.closeDialog=function(){e.cancel()}}]),apControllers.controller("taskDialogCtrl",["$scope","$mdDialog","$log","dbAPI",function(t,e,n,o){t.taskData={};var c=this.locals;c.is_new||angular.forEach(c.jobObj,function(e,n){t.taskData[n]=e}),t.saveTask=function(){c.is_new?(t.taskData.parent_id=c.parent_id,o.addRecord("tasks",t.taskData).then(function(t){e.hide()},function(t){n.log(t)})):o.updateRecord("tasks",t.taskData.id,t.taskData).then(function(t){e.hide()},function(t){n.log(t)})},t.closeDialog=function(){e.cancel()}}]);